# Run with:
# docker run -it -d --rm \
#     --name nixos-cache-proxy \
#     -p 26560:8080 \
#     -v "$(pwd)/scripts/nginx-cache-proxy/proxy.conf":/etc/nginx/conf.d/proxy.conf:ro \
#     -v "$(pwd)/scripts/nginx-cache-proxy/create-dirs.sh":/docker-entrypoint.d/99-create-cache-dirs.sh:ro \
#     nginx:alpine

map $status $cache_header {
    200     "public";
    302     "public";
    default "no-cache";
}

server {
    listen 8080;

#     resolver 1.1.1.1;

#     location / {
#         error_page 404 = @fallback;
#     }
#
#     location @fallback {
#         proxy_pass http://cache.nixos.org;
#         proxy_cache_valid  200 302  60m;
#         expires max;
#         add_header Cache-Control $cache_header always;
#     }

    location ~ ^/nix-cache-info {
        proxy_store        on;
        proxy_store_access user:rw group:rw all:r;
        proxy_temp_path    /data/nginx/nix-cache-info/temp;
        root               /data/nginx/nix-cache-info/store;

        proxy_set_header Host "cache.nixos.org";
        proxy_pass https://cache.nixos.org;
    }

    location ~^/nar/.+$ {
        proxy_store        on;
        proxy_store_access user:rw group:rw all:r;
        proxy_temp_path    /data/nginx/nar/temp;
        root               /data/nginx/nar/store;

        proxy_set_header Host "cache.nixos.org";
        proxy_pass https://cache.nixos.org;
    }
}

# user  nginx;
# worker_processes  auto;
#
# error_log  /var/log/nginx/error.log notice;
# pid        /var/run/nginx.pid;
#
# events {
#     worker_connections  1024;
# }
#
#
# http {
#     include       /etc/nginx/mime.types;
#     default_type  application/octet-stream;
#
#     log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                       '$status $body_bytes_sent "$http_referer" '
#                       '"$http_user_agent" "$http_x_forwarded_for"';
#
#     access_log  /var/log/nginx/access.log  main;
#
#     sendfile        on;
#     #tcp_nopush     on;
#
#     keepalive_timeout  65;
#
#     #gzip  on;
#
#     #include /etc/nginx/conf.d/*.conf;
# }